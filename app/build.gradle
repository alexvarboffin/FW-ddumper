buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.29.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}
android {
    dataBinding {
        enabled true
    }
    signingConfigs {
        config {

            Properties localProps = new Properties()
            localProps.load(new FileInputStream(file('../local.properties')))
            Properties keyProps = new Properties()

            keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))

            storeFile file(keyProps["RELEASE_STORE_FILE"])
            keyAlias keyProps["RELEASE_KEY_ALIAS"]
            storePassword keyProps["RELEASE_STORE_PASSWORD"]
            keyPassword keyProps["RELEASE_KEY_PASSWORD"]
        }
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            multiDexEnabled = false
            resConfigs "ru", "en"

            vectorDrawables {
                useSupportLibrary = true
            }


            vectorDrawables.useSupportLibrary = true
            applicationId "com.walhalla.fwdumper"

            minSdkVersion rootProject.minSdkVersion
            targetSdkVersion rootProject.targetSdkVersion

            versionCode code
            versionName "1.3." + code + ".release"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            //signingConfig signingConfigs.config
        }


    } else {
        throw new GradleException("Could not read version.properties!")
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions "W"
    productFlavors {
        full {
            dimension 'W'
            signingConfig signingConfigs.config
            //32:B7:84:6F:A3:69:8F:90:7B:EF:75:81:55:F2:3D:40:EE:3F:CC:DD
        }
    }
    defaultConfig {}
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'androidx.preference:preference:1.1.0-alpha05'
    implementation 'com.google.android.material:material:1.1.0-alpha06'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta1'
    //    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13-beta-2'
    //    androidTestImplementation 'androidx.test:runner:1.1.0'
    //    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation project(':libsuperuser')

//    implementation('com.crashlytics.sdk.android:crashlytics:2.10.0@aar') {
//        transitive = false
//    }

    implementation project(':lib')
    implementation project(':ui')
    implementation project(':wads')
    implementation project(':threader')

    implementation('com.google.android.gms:play-services-ads:17.2.0') {
        exclude group: 'com.android.support'
    }

    implementation 'com.google.android.gms:play-services-ads-base:17.2.1'
    implementation 'com.google.firebase:firebase-ads:17.2.1'
//    ){
//        exclude group: 'com.google.android.gms'
//    }
}
